security:
  encoders:
    App\Entity\Client:
      algorithm: bcrypt

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers: #ce sont des fournisseurs d'authentifications
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\Client  # Le provider qui va gérer les authentifications est le classe "Client"
        property: email
    # used to reload user from session & other features (e.g. switch_user)

  firewalls: # permet de gérer l'accès aux ressources (les autorisations)
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/  # la sécurité ne sera pas requise pour tout ce qui commence par _(profiler|wdt)|css|images|js
      security: false
    main:
      anonymous: true  # on autorise l'internaute à est connecté de façon anonyme
      lazy: true
      provider: app_user_provider
      guard:
        authenticators:
          - App\Security\LoginFormAuthenticator  #gardien de l'authentification, i.e le listener

      logout:
        path: app_logout

      remember_me:
        secret: '%kernel.secret%'
        lifetime: 2592000 # 30 jours en secondes

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  #- { path: ^/admin, roles: ROLE_ADMIN }  # le User qui a le rôle admin, a accès aux routes qui commencent par "/admin"
  # - { path: ^/profile, roles: ROLE_USER }
